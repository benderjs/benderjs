#!/usr/bin/env node
var argParser = require('nomnom'),
    path = require('path'),
    config = require('../lib/config'),
    constants = require('../lib/constants'),
    log = require('../lib/logger').create('cli');

argParser.command('init')
    .callback(initialize)
    .help('Initialize Bender.js for this directory');

argParser.command('run')
    .callback(runTests)
    .help('Run tests on captured clients');

argParser.command('server')
    .callback(startServer)
    .option('port', {
        abbr: 'p',
        default: constants.PORT,
        help: 'Port on which the server will run'
    })
    .option('hostname', {
        abbr: 'H', // YEAH... should be "h" but it's reserved for nomnom's help
        default: constants.HOSTNAME,
        help: 'Hostname used to run server'
    })
    .option('config', {
        abbr: 'c',
        help: 'Alternative path to Bender.js configuration file'
    })
    .help('Start Bender.js server');

argParser.command('version')
    .callback(function () {
        log.info('Bender.js v%s', constants.VERSION);
    })
    .help('Print Bender.js version');

argParser.parse();

function startServer(options) {
    var server = require('../lib/server');

    config.load(path.resolve(process.cwd(), options.config || 'bender.js'));

    server.create().listen(options.port, options.hostname, function () {
        log.info('Bender.js v%s Server started at http://%s:%s', constants.VERSION, options.hostname, options.port);
    });
}

function runTests(options) {
    // TODO run tests on captured browsers
}

function initialize(options) {
    // TODO create config file for current directory    
}
